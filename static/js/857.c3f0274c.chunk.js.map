{"version":3,"file":"static/js/857.c3f0274c.chunk.js","mappings":"4OACA,EAAuB,qBAAvB,EAAoD,sBAApD,EAAyF,6B,SC6DzF,EAzDe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAWMC,EAAW,mCAAG,+GAEOC,MAAM,qDAAD,OAjBlB,mCAiBkB,kBAC4CH,IAHxD,cAEVI,EAFU,gBAKGA,EAASC,OALZ,OAKVC,EALU,OAMhBP,EAAUO,EAAKC,SANC,kDAQhBC,QAAQC,MAAM,SAAd,MARgB,0DAAH,qDAYjB,OACE,4BACE,0BACE,kBAAMC,SApBS,SAAAC,GACnBA,EAAEC,iBACFV,GACD,EAiBmCW,UAAWC,EAAzC,WACE,kBACEC,KAAK,OACLC,MAAOhB,EACPiB,SA5BgB,SAAAN,GACxBV,EAAeU,EAAEO,OAAOF,MACzB,EA2BSH,UAAWC,KAEb,mBAAQC,KAAK,SAAb,0BAGJ,4BACE,eAAIF,UAAWC,EAAf,8BACA,wBACGhB,EAAOqB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,KAF/B,SAKGH,EAAMI,SANFJ,EAAMG,GADA,WAe1B,C,sBC7DD,SAASE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBhB,EAAQiB,EAAKjB,KAInB,CAHE,MAAOP,GAEP,YADAmB,EAAOnB,EAET,CAEIwB,EAAKC,KACPP,EAAQX,GAERmB,QAAQR,QAAQX,GAAOoB,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMb,GACbS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQd,EAClE,CAEA,SAASc,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/pages/movies/movies.module.css?0ac1","pages/movies/movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"movies_form__RJxSH\",\"input\":\"movies_input__rHz1z\",\"searchHeader\":\"movies_searchHeader__lZ+9K\"};","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport css from './movies.module.css';\nconst API_KEY = 'ec14b12534cfa5aa544b4a61898160f3';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleInputChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchMovies();\n  };\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n      );\n      const data = await response.json();\n      setMovies(data.results);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={handleSubmit} className={css.form}>\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={handleInputChange}\n            className={css.input}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n      <div>\n        <h2 className={css.searchHeader}>Search Results:</h2>\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={{\n                  pathname: `/movies/${movie.id}`,\n                }}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","movies","setMovies","searchQuery","setSearchQuery","fetchMovies","fetch","response","json","data","results","console","error","onSubmit","e","preventDefault","className","css","type","value","onChange","target","map","movie","to","pathname","id","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}